// Mocks generated by Mockito 5.4.4 from annotations
// in effective_test_work/test/src/find_tickets/data/repository/tickets_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:effective_test_work/api/tickets_api.dart' as _i8;
import 'package:effective_test_work/src/find_tickets/data/model/list_recommended_offer_dto.dart'
    as _i4;
import 'package:effective_test_work/src/find_tickets/data/model/list_requested_offer_dto.dart'
    as _i5;
import 'package:effective_test_work/src/find_tickets/data/model/list_tickets_dto.dart'
    as _i3;
import 'package:effective_test_work/src/find_tickets/data/model/ticket_dto.dart'
    as _i7;
import 'package:effective_test_work/src/find_tickets/domain/converters/ticket_converter.dart'
    as _i6;
import 'package:effective_test_work/src/find_tickets/domain/entities/ticket_entity.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTicketEntity_0 extends _i1.SmartFake implements _i2.TicketEntity {
  _FakeTicketEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListTicketsDTO_1 extends _i1.SmartFake
    implements _i3.ListTicketsDTO {
  _FakeListTicketsDTO_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListRecommendedOfferDTO_2 extends _i1.SmartFake
    implements _i4.ListRecommendedOfferDTO {
  _FakeListRecommendedOfferDTO_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListRequestedOfferDTO_3 extends _i1.SmartFake
    implements _i5.ListRequestedOfferDTO {
  _FakeListRequestedOfferDTO_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TicketConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockTicketConverter extends _i1.Mock implements _i6.TicketConverter {
  MockTicketConverter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TicketEntity convert(_i7.TicketDTO? input) => (super.noSuchMethod(
        Invocation.method(
          #convert,
          [input],
        ),
        returnValue: _FakeTicketEntity_0(
          this,
          Invocation.method(
            #convert,
            [input],
          ),
        ),
      ) as _i2.TicketEntity);

  @override
  Iterable<_i2.TicketEntity> convertMultiple(
          Iterable<_i7.TicketDTO>? inputList) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertMultiple,
          [inputList],
        ),
        returnValue: <_i2.TicketEntity>[],
      ) as Iterable<_i2.TicketEntity>);
}

/// A class which mocks [ITicketsApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockITicketsApi extends _i1.Mock implements _i8.ITicketsApi {
  MockITicketsApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i3.ListTicketsDTO> getTickets() => (super.noSuchMethod(
        Invocation.method(
          #getTickets,
          [],
        ),
        returnValue: _i9.Future<_i3.ListTicketsDTO>.value(_FakeListTicketsDTO_1(
          this,
          Invocation.method(
            #getTickets,
            [],
          ),
        )),
      ) as _i9.Future<_i3.ListTicketsDTO>);

  @override
  _i9.Future<_i4.ListRecommendedOfferDTO> getRecommendedTickets() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedTickets,
          [],
        ),
        returnValue: _i9.Future<_i4.ListRecommendedOfferDTO>.value(
            _FakeListRecommendedOfferDTO_2(
          this,
          Invocation.method(
            #getRecommendedTickets,
            [],
          ),
        )),
      ) as _i9.Future<_i4.ListRecommendedOfferDTO>);

  @override
  _i9.Future<_i5.ListRequestedOfferDTO> getRequestedTickets() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequestedTickets,
          [],
        ),
        returnValue: _i9.Future<_i5.ListRequestedOfferDTO>.value(
            _FakeListRequestedOfferDTO_3(
          this,
          Invocation.method(
            #getRequestedTickets,
            [],
          ),
        )),
      ) as _i9.Future<_i5.ListRequestedOfferDTO>);
}
